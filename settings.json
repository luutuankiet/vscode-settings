{
    "remote.SSH.remotePlatform": {
        "40.90.168.49": "linux",
        "103.110.84.120": "linux",
        "103.221.223.102": "linux",
        "103.221.223.131": "linux",
        "103.221.223.158": "linux",
        "139.180.153.250": "linux",
        "manjaro": "linux",
        "innoVM": "linux",
        "dell": "linux",
        "innoVm": "linux",
        "nas": "linux",
        "gtd": "linux",
        "mac": "macOS",
        "JOONS_VM": "linux",
        "joon": "linux",
        "192.168.1.9": "linux",
        "lenovo": "linux",
        "pi": "linux",
        "cloudshell": "linux",
        "nas-local": "linux",
        "tmp": "macOS",
        "dbt_cram": "linux",
        "estrid_tmp": "linux",
        "estrid_tmp_dev": "linux",
        "seaco_vm": "linux",
        "seaco_cloudshell": "linux",
        "cloudshell_joon": "linux",
        "ticktick_dev": "linux"
    },
    // ==================================================================
    // ===========   python & terminal  ===========================
    // ==================================================================
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.env.osx": {
        "PYTHONPATH": "${env:PYTHONPATH}",
    },
    "terminal.integrated.env.linux": {
        "PYTHONPATH": "${env:PYTHONPATH}",
    },
    "terminal.integrated.env.windows": {
        "PYTHONPATH": "${env:PYTHONPATH}",
    },
    "python.envFile": "${workspaceFolder}/.env",
    "python.terminal.activateEnvironment": true,
    "terminal.integrated.inheritEnv": true,
    // ==================================================================
    // ===========   END python & terminal  ===========================
    // ==================================================================
    "workbench.startupEditor": "none",
    "explorer.confirmDragAndDrop": false,
    "git.autorefresh": true,
    "jupyter.interactiveWindow.creationMode": "perFile",
    "notebook.confirmDeleteRunningCell": false,
    "notebook.lineNumbers": "on",
    "docsView.documentationView.updateMode": "sticky",
    "jupyter.askForKernelRestart": false,
    "editor.unicodeHighlight.invisibleCharacters": false,
    "editor.accessibilitySupport": "off",
    "files.watcherExclude": {
        "**/***": true
    },
    "terminal.integrated.fontSize": 12,
    "terminal.integrated.defaultProfile.linux": "zsh",
    // "terminal.integrated.shell.windows": "C:\\Users\\KL1406\\AppData\\Local\\Programs\\Git\\bin\\bash.exe",
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}/Sysnative/cmd.exe",
                "${env:windir}/System32/cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "GitBash": {
            "path": "C:\\Users\\KL1406\\AppData\\Local\\Programs\\Git\\bin\\bash.exe",
            "icon": "terminal-bash"
        },
    },
    "terminal.integrated.defaultProfile.windows": "GitBash",
    "files.autoSave": "off",
    "editor.inlineSuggest.suppressSuggestions": true,
    "cody.commandCodeLenses": false,
    "editor.fontFamily": "'Droid Sans Mono', 'monospace', monospace",
    "git.confirmSync": false,
    "pylint.importStrategy": "fromEnvironment",
    "git.openRepositoryInParentFolders": "never",
    "remote.autoForwardPorts": false,
    "cody.codeActions.enabled": false,
    "cody.editorTitleCommandIcon": false,
    "git.enableSmartCommit": true,
    "git.autofetch": true,
    "[python]": {
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        "editor.defaultFormatter": "ms-python.black-formatter"
    },
    "python.languageServer": "Pylance",
    "python.analysis.typeCheckingMode": "standard",
    "remote.tunnels.alwaysUpdateCLI": true,
    "files.associations": {
        "/**/models/**/*.sql": "jinja-sql",
        "/**/macros/**/*.sql": "jinja-sql",
        "/**/tests/**/*.sql": "jinja-sql",
        "/**/*.lkml": "lookml",
        "/**/Code/**/*.sql": "sql",
        "/**/dbt_project/**/*.sql": "jinja-sql",
        "*.yml": "yaml",
        ".env*": "dotenv",
        "*.css": "tailwindcss",
        "*.bqsql": "sql-bigquery",
        "*.sql": "sql",
        "/**/.github/**/*.yml": "github-actions-workflow"
    },
    // "files.associations": {
    //     "*.sql": "jinja-sql",
    //     "*.yml": "jinja-yaml"
    // },
    "[jinja-sql]": {
        "editor.defaultFormatter": "innoverio.vscode-dbt-power-user"
    },
    "redhat.telemetry.enabled": true,
    "dev.containers.defaultFeatures": {},
    "terminal.integrated.smoothScrolling": true,
    "workbench.list.smoothScrolling": true,
    "terminal.integrated.cursorStyle": "underline",
    "git.fetchOnPull": true,
    "settingsSync.keybindingsPerPlatform": true,
    "editor.definitionLinkOpensInPeek": true,
    "editor.lineHeight": 0,
    "git-graph.keyboardShortcut.refresh": "UNASSIGNED",
    "mssql.connections": [
        {
            "server": "DBN002.pinnacle1.org",
            "database": "XETL",
            "authenticationType": "Integrated",
            "profileName": "dev",
            "encrypt": "Mandatory",
            "trustServerCertificate": true,
            "password": ""
        }
    ],
    "mssql.format.datatypeCasing": "uppercase",
    "mssql.format.keywordCasing": "uppercase",
    "mssql.format.placeCommasBeforeNextStatement": true,
    "mssql.format.placeSelectStatementReferencesOnNewLine": true,
    "mssql.copyIncludeHeaders": true,
    "mssql.messagesDefaultOpen": false,
    "window.confirmSaveUntitledWorkspace": false,
    "workbench.editorAssociations": {
        "*.xlsx": "cweijan.officeViewer",
        "*.csv": "default",
        "*.md": "default",
        "{git,gitlens,git-graph}:/**/*.{md,csv,svg}": "default"
    },
    "sqltools.useNodeRuntime": true,
    "mssql.enableQueryHistoryCapture": false,
    "sqltools.connections": [
        {
            "previewLimit": 50,
            "server": "boyluu0819.ddns.net",
            "port": 5433,
            "driver": "PostgreSQL",
            "name": "gtd",
            "database": "gtd_dash",
            "username": "ken"
        }
    ],
    "[sql]": {
        "editor.defaultFormatter": "mtxr.sqltools"
    },
    "poor-mans-t-sql-formatter-pg.std.breakJoinOnSections": true,
    "poor-mans-t-sql-formatter-pg.std.expandInLists": true,
    "explorer.confirmDelete": false,
    "flake8.args": [
        "--max-line-length=120",
        "--ignore=E402,E303,E702,F841,F401,E302,E305,E265,E231,E501,E225,W292,W293"
    ],
    "leetcode.workspaceFolder": "/Users/luutuankiet/.leetcode",
    "leetcode.defaultLanguage": "python3",
    "markdown.preview.fontSize": 15,
    "leetcode.hint.commandShortcut": false,
    "leetcode.hint.configWebviewMarkdown": false,
    "editor.formatOnType": true,
    "sqltools.highlightQuery": false,
    "workbench.editorLargeFileConfirmation": 30,
    "cody.autocomplete.enabled": true,
    "debug.onTaskErrors": "debugAnyway",
    "security.workspace.trust.untrustedFiles": "open",
    "explorer.confirmPasteNative": false,
    "sqltools.defaultOpenType": "csv",
    "sqltools.defaultExportType": "csv",
    "sqltools.disableNodeDetectNotifications": true,
    "sqltools.disableReleaseNotifications": true,
    "sqltools.tableTreeItemsExpanded": true,
    "sqltools.csvExport.quoted": true,
    "sqltools.csvExport.delimiter": "|",
    "sqltools.results.reuseTabs": "connection",
    "explorer.incrementalNaming": "disabled",
    "cloudcode.project": "joon-4-joon",
    "cloudcode.autoDependencies": "off",
    "window.zoomPerWindow": true,
    "docker.containers.label": "ContainerName",
    "docker.containers.sortBy": "CreatedTime",
    "dbt.altimateAiKey": "19f92e471901a481d2474ad12c4808bf",
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "open-folder.showStatusBar": false,
    "azureRepos.experimental.lfs.read.enabled": false,
    "remote.tunnels.access.hostNameOverride": "mac",
    "editor.tokenColorCustomizations": {
        "textMateRules": []
    },
    "dotenv.enableAutocloaking": false,
    "docker.volumes.groupBy": "None",
    "docker.volumes.description": [
        "CreatedTime"
    ],
    "docker.volumes.sortBy": "CreatedTime",
    "docker.containers.description": [
        "Status"
    ] // to enable ssh git agent forwarding : https://github.com/microsoft/vscode-remote-release/issues/9662#issuecomment-2010515888
    // in ssh config, also add these for the above ^^^ to work
    //     Host github.com
    //   AddKeysToAgent yes
    //   UseKeychain yes
    //   IdentityFile ~/.ssh/id_ed25519
    // just to be sure, add this to mac : curl -sSL https://gist.github.com/RichardBronosky/429a8fff2687a16959294bcee336dd2a/raw/install.sh | bash
    ,
    "githubPullRequests.createOnPublishBranch": "never",
    "window.titleBarStyle": "native",
    "vscode_vibrancy.opacity": -1,
    "terminal.integrated.gpuAcceleration": "off", // for vibrancy
    "window.autoDetectColorScheme": false, // for vibrancy
    "vscode-office.editorTheme": "Light",
    "window.systemColorTheme": "dark",
    "vscode_vibrancy.refreshInterval": 10,
    "vscode_vibrancy.imports": [
        "/Users/luutuankiet/config-backups/vscode_vibrancy_sticky_scroll.css"
    ],
    "workbench.colorCustomizations": {
        "editorStickyScroll.background": "#2228",
        "terminal.background": "#00000000"
    },
    "editor.stickyScroll.maxLineCount": 3,
    "editor.stickyScroll.enabled": false,
    // tailwind
    "tailwindCSS.includeLanguages": {
        "html": "html",
        "javascript": "javascript",
        "css": "css"
    },
    "editor.quickSuggestions": {
        "strings": true
    },
    "diffEditor.ignoreTrimWhitespace": false,
    // schema validations
    "json.schemas": [
        {
            "fileMatch": [
                "/**/.devcontainer/devcontainer.json"
            ],
            "url": "https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainer.base.schema.json"
        },
    ],
    "terminal.integrated.persistentSessionReviveProcess": "never",
    "terminal.integrated.enablePersistentSessions": false,
    "window.customTitleBarVisibility": "auto",
    "interactiveWindow.executeWithShiftEnter": true,
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "dbt.fileNameTemplateGenerateModel": "{tableName}",
    "[yaml]": {
        "diffEditor.ignoreTrimWhitespace": false
    },
    "syncSettings.resources": [
        "keybindings",
        "settings",
        "snippets",
        "uiState"
    ],
    // "syncSettings.resources": ["extensions", "keybindings", "settings", "snippets", "uiState"],
    "workbench.editor.empty.hint": "hidden",
    "bigqueryRunner.projectId": "joon-sandbox",
    "bigqueryRunner.extensions": [
        ".bqsql",
        ".bqddl",
        ".bqdml",
        ".bigquery"
    ],
    "workbench.editor.pinnedTabsOnSeparateRow": true,
    "workbench.editor.tabSizing": "shrink",
    "workbench.editor.wrapTabs": true,
    "[sql-bigquery]": {
        "editor.defaultFormatter": "ReneSaarsoo.sql-formatter-vsc"
    },
    "bigqueryRunner.statusBarItem.align": "right",
    "bqExtensionVSCode.trace.server": "verbose",
    "debefy.data-dancer.locale": "en-US",
    "bigqueryRunner.tree.projectIds": [
        "one-global-looker-prod",
        "joon-sandbox"
    ],
    "bigqueryRunner.downloader.csv.header": true,
    "bigqueryRunner.maximumBytesBilled": "10GB",
    "indentRainbow.excludedLanguages": [
        "dynamic csv",
        "plaintext"
    ],
    "rainbow_csv.enable_context_menu_head": true,
    "rainbow_csv.enable_context_menu_tail": true,
    "workbench.settings.applyToAllProfiles": [
        "workbench.colorCustomizations"
    ],
    // ==================================================================
    // ===========    settings for SSH agents ===========================
    // ==================================================================
    "remote.SSH.enableAgentForwarding": true,
    "remote.SSH.useLocalServer": false,
    "remote.SSH.useExecServer": false,
    "remote.SSH.remoteServerListenOnSocket": true,
    "peacock.favoriteColors": [
        {
            "name": "Angular Red",
            "value": "#dd0531"
        },
        {
            "name": "Azure Blue",
            "value": "#007fff"
        },
        {
            "name": "JavaScript Yellow",
            "value": "#f9e64f"
        },
        {
            "name": "Mandalorian Blue",
            "value": "#1857a4"
        },
        {
            "name": "Node Green",
            "value": "#215732"
        },
        {
            "name": "React Blue",
            "value": "#61dafb"
        },
        {
            "name": "Something Different",
            "value": "#832561"
        },
        {
            "name": "Svelte Orange",
            "value": "#ff3d00"
        },
        {
            "name": "Vue Green",
            "value": "#42b883"
        },
        {
            "name": "red",
            "value": "#831f25"
        }
    ],
    "githubPullRequests.pushBranch": "always",
    "docker.volumes.label": "VolumeName",
    "githubPullRequests.pullBranch": "never",
    "workbench.iconTheme": "vscode-icons",
    "gitlens.advanced.messages": {
        "suppressGitDisabledWarning": true,
        "suppressGitMissingWarning": true
    },
    "dbt.perspectiveTheme": "Monokai",
    "dbt.enableNewLineagePanel": true,
    "errorLens.enabledDiagnosticLevels": [
        "error",
        "info"
    ],
    "[shellscript]": {
        "editor.defaultFormatter": "mads-hartmann.bash-ide-vscode"
    },
    "textIndentHighlighter.colors": [
        "#dc8580",
        "#f2e6b1",
        "#95dab6",
        "#83b2d0",
        "#7f87b2"
    ],
    "githubPullRequests.fileListLayout": "tree",
    "workbench.editor.restoreViewState": false,
    "files.restoreUndoStack": false,
    "[git-rebase]": {
        "workbench.editor.restoreViewState": false
    },
    "dbt.altimateInstanceName": "ken",
    // paste these to remote machine / workspace to allow host-based ssh 
    // "remote.SSH.enableAgentForwarding": false,
    // "remote.SSH.useLocalServer": true,
    // "remote.SSH.useExecServer": true,
    // "remote.SSH.remoteServerListenOnSocket": false
    // markdown dir settings
    "markdown.copyFiles.destination": {
        "**/*": "assets/${documentBaseName}/"
    },
    "[github-actions-workflow]": {},
    "vsicons.dontShowNewVersionMessage": true,
    "extensions.ignoreRecommendations": true,
    // workbench editor screens settings
    "workbench.editor.openSideBySideDirection": "right", // up/down
    "settingsSync.ignoredSettings": [
        "editor.minimap.autohide",
        "editor.minimap.enabled",
        "workbench.iconTheme",
        "-window.zoomLevel",
        "workbench.colorTheme"
    ],
    // TODO:  something to look into; typescript bogs my machien down
    "typescript.validate.enable": false,
    "javascript.validate.enable": false,
    "javascript.suggestionActions.enabled": false,
    "typescript.suggestionActions.enabled": false,
    "typescript.tsc.autoDetect": "off",
    "vsicons.presets.jsonOfficial": true,
    "editor.smoothScrolling": true,
    "editor.minimap.showSlider": "always",
    "editor.minimap.renderCharacters": false,
    "chat.commandCenter.enabled": false,
    "editor.minimap.size": "fill",
    "cody.chat.preInstruction": "i am learning to code for data engineering. my langauges of interest are sql python bash powershell c#. i am a beginner. i am interested in making scripts for automation. also I am very interested to learn object oriented programming and its application whenever possible. when you repond, please always google first before resplying. whenever there is code related, give me step by step example down to how each variable is used, is updated along the codeline, give the expected variable value in comments so that i dont have to execute to find out; also printing the manual of what syntax is being used. whenever possible give equivalent in other code i am learning. and provide a the best practice solution or concept that data engineers do to solve such problem in pragmatic ways. also when i give additional tables or dataframes or raw data in the question please by default assume that i already have it imported, so no need to include the actual initialization of the table or df in the response so as not to make it too long. whenever possible give me a case study explaination, the context why all the way to implement the outcome. in your answer organize it this way : skip any intro context to the bottom, provide answer directly; i.e. if it is coding related just give the code then contexts comes after, no need for wordy introduction, go straight to the code. please mention if this has been discussed or explained previously in this chat thread. please also give info on what does it do, how does it work in relation to other components in this repo, most importantly to its dependencies or anything depends on it; print out the specific lines snippets in those dependencies to help me review in one central place. give specific examples to expand on what does it do, other scenarios that we can particularly use that same kind of syntax, or relevant python snippets. walk me through line by line syntax by syntax to be as detailed as possible. point out the relationships because that is what helps me learn. If I request you to repond in markdown,only a single literal set of ```md ``` tripple backtick, no other tripple backticks in your entire answer - in other words do not include any tripple backticks blocks except for the outermost markdown ```.",
    "workbench.colorTheme": "Bluloco Dark",
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "terminal.integrated.cursorBlinking": true,
    "diffEditor.useInlineViewWhenSpaceIsLimited": false,
    "[javascriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "window.commandCenter": false,
    "workbench.layoutControl.enabled": false,
    "editor.minimap.autohide": true,
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one"
    },
    "cody.debug.verbose": true,
    "editor.minimap.enabled": false,
    "postman.settings.dotenv-detection-notification-visibility": false,
    "cody.commandHints.enabled": false,
    "window.menuBarVisibility": "toggle",
    "geminicodeassist.project": "",
    "editor.fontSize": 14,
    "window.zoomLevel": 1,
    "git-graph.commitDetailsView.location": "Docked to Bottom",
    "git-graph.openNewTabEditorGroup": "Beside",
    "diffEditor.hideUnchangedRegions.enabled": true,
    "diffEditor.renderSideBySide": true,
    "vscode-office.openOutline": false,
    "javascript.updateImportsOnFileMove.enabled": "always"
}